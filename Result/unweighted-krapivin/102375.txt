lp|NN|BODY_12:BODY_22:ABSTRACT_2:ABSTRACT_3:BODY_2:BODY_3:BODY_4:BODY_6:ABSTRACT_6:BODY_5:BODY_1:ABSTRACT_1:BODY_10:BODY_7:BODY_30:BODY_8|3
we|PRP|BODY_6:BODY_5:BODY_25:BODY_1:BODY_2:BODY_3:BODY_4:BODY_10:BODY_7:BODY_8:BODY_9|1
it|PRP|BODY_11:BODY_16:BODY_13:BODY_23:BODY_2:BODY_3:BODY_4:BODY_6:BODY_5:ABSTRACT_4:BODY_1:BODY_10:BODY_7:BODY_8:BODY_9|1
that|WDT|BODY_11:BODY_16:BODY_13:BODY_2:BODY_3:BODY_14:BODY_4:BODY_6:BODY_5:BODY_53:BODY_10:BODY_7:BODY_8|1
which|WDT|BODY_11:BODY_18:BODY_15:BODY_13:BODY_2:BODY_14:BODY_3:BODY_4:BODY_6:BODY_36:BODY_10:BODY_7:BODY_8:BODY_9|1
example|NN|BODY_6:BODY_5:BODY_15:BODY_2:BODY_1:BODY_24:BODY_3:BODY_4:BODY_8|1
t|NN|BODY_11:BODY_40:BODY_17:BODY_13:BODY_26:BODY_2:BODY_3:BODY_24:BODY_38:BODY_4:BODY_33:BODY_6:BODY_5:BODY_31:BODY_28:BODY_7:BODY_8:BODY_20:BODY_9|0
lsl|NN|BODY_6:BODY_16:BODY_1:BODY_2:ABSTRACT_3:BODY_3:BODY_4:BODY_29:BODY_9|0
equations|NNS|BODY_6:BODY_5:BODY_2:BODY_14:BODY_3:BODY_10:BODY_4:BODY_7|0
they|PRP|BODY_6:BODY_5:BODY_16:ABSTRACT_2:BODY_2:BODY_1:BODY_3:ABSTRACT_1:BODY_10:BODY_4:BODY_8:BODY_9|0
induction|NN|BODY_6:BODY_5:BODY_23:BODY_26:BODY_25:BODY_2:BODY_3:BODY_10:BODY_8:BODY_9|1
specifications|NNS|BODY_6:BODY_5:BODY_1:BODY_2:BODY_3:BODY_4:BODY_7|0
there|EX|BODY_6:BODY_5:BODY_21:BODY_1:BODY_2:BODY_3:BODY_8|0
a specification|DT NN|BODY_6:BODY_5:ABSTRACT_4:BODY_13:BODY_2:BODY_4:ABSTRACT_7:BODY_7:BODY_8|0
the proof|DT NN|BODY_6:BODY_11:BODY_13:BODY_1:BODY_2:BODY_3:BODY_7:BODY_8:BODY_9|1
deduction rules|NN NNS|BODY_6:BODY_13:BODY_1:BODY_3:BODY_4:BODY_7:BODY_8:BODY_9|0
lslc|NN|BODY_12:BODY_15:BODY_1:BODY_2:ABSTRACT_3:BODY_3:BODY_7|0
proofs|NNS|BODY_5:BODY_15:BODY_14:BODY_3:BODY_4:BODY_8:BODY_9|0
specifiers|NNS|BODY_5:BODY_21:BODY_2:BODY_1:BODY_4|0
linearcontainer|NN|BODY_12:BODY_18:BODY_15:BODY_13:BODY_2:BODY_3:BODY_8:BODY_9|0
the conjecture|DT NN|BODY_5:BODY_28:BODY_2:BODY_1:BODY_3:BODY_4:BODY_7:BODY_8|1
s|VBZ|BODY_6:BODY_17:BODY_15:BODY_13:BODY_3:BODY_10:BODY_4:BODY_7:BODY_20|0
2|CD|BODY_12:BODY_6:BODY_18:BODY_21:BODY_13:BODY_26:BODY_1:BODY_3:BODY_24:BODY_19:BODY_8|0
the axioms|DT NNS|BODY_32:BODY_5:BODY_42:BODY_1:BODY_3:BODY_4:BODY_30:BODY_8|0
0|CD|BODY_12:BODY_40:BODY_28:BODY_15:BODY_21:BODY_10:BODY_4|4
the assertions|DT NNS|BODY_5:BODY_11:BODY_1:BODY_3:BODY_10:BODY_19:BODY_29:BODY_7:BODY_9|0
all|DT|BODY_2:BODY_3:BODY_4:BODY_10:BODY_8:BODY_9|0
the|DT|BODY_6:BODY_5:BODY_22:BODY_1:BODY_4|0
the trait|DT NN|BODY_6:BODY_11:BODY_1:BODY_3:BODY_4:BODY_10:BODY_7|0
us|PRP|BODY_6:BODY_2:BODY_3:BODY_4|0
. z|. FW|BODY_6:BODY_36:BODY_45:BODY_13:BODY_4:BODY_7:BODY_8|0
the theory|DT NN|BODY_2:BODY_3:BODY_4|0
rewrite rules|NN NNS|BODY_6:BODY_5:BODY_15:BODY_2:BODY_3:BODY_7:BODY_8:BODY_9|0
axioms|NNS|BODY_5:BODY_2:BODY_3:BODY_10:BODY_4:BODY_7|0
them|PRP|BODY_6:BODY_5:BODY_2:BODY_4:BODY_7:BODY_9|0
consistency|NN|BODY_5:BODY_2:BODY_1:BODY_8|0
a trait|DT NN|BODY_31:BODY_5:BODY_15:BODY_2:BODY_1:BODY_4:BODY_8:BODY_9|0
the implication|DT NN|BODY_12:BODY_45:BODY_15:BODY_23:BODY_2:BODY_38|4
a window|DT NN|BODY_6:BODY_5:BODY_2:BODY_14:BODY_4:BODY_10:BODY_9|0
claims|NNS|BODY_5:BODY_1:BODY_24:BODY_4|0
the proof obligations|DT NN NNS|BODY_15:BODY_2:BODY_3:BODY_4:BODY_7|0
operators|NNS|BODY_5:BODY_11:ABSTRACT_11:BODY_2:BODY_4:BODY_8|0
rest|NN|BODY_6:BODY_21:BODY_23:BODY_14:BODY_4:BODY_9|0
a proof|DT NN|BODY_6:BODY_5:BODY_11:BODY_2:BODY_3:BODY_4:BODY_7:BODY_8|0
totalorder|NN|BODY_12:BODY_6:BODY_5:BODY_11:BODY_2:BODY_3:BODY_4|0
completeness|NN|BODY_6:BODY_3:BODY_4|0
lsl specifications|JJ NNS|ABSTRACT_4:BODY_26:BODY_2:BODY_1:ABSTRACT_3:BODY_3:BODY_4|0
traits|NNS|BODY_12:BODY_6:BODY_5:BODY_2:BODY_3:BODY_7:BODY_8|0
1|CD|BODY_6:BODY_5:BODY_16:BODY_2:BODY_4:BODY_10|0
coordinate|VB|BODY_6:BODY_5:BODY_2:BODY_1:BODY_3:BODY_8|0
this|DT|BODY_11:BODY_26:BODY_1:BODY_4:BODY_8|0
x|JJ|BODY_12:BODY_5:BODY_27:BODY_8|2
priorityqueue|NN|BODY_6:BODY_13:BODY_2:BODY_3:BODY_8|0
formal specifications|JJ NNS|BODY_2:BODY_4:BODY_7|0
c|NN|BODY_5:BODY_1:BODY_3:BODY_7|0
the deduction rule|DT NN NN|BODY_12:BODY_14:BODY_3:BODY_4:BODY_7|2
variables|NNS|BODY_6:BODY_5:BODY_3:BODY_4:BODY_9|0
addw|NN|BODY_5:BODY_2:BODY_3|0
cases|NNS|BODY_6:BODY_11:BODY_3:BODY_4:BODY_8|0
the converts clause|DT NNS NN|BODY_5:BODY_2:BODY_1:BODY_3|0
theory containment|NN NN|BODY_6:ABSTRACT_6:BODY_3:BODY_4:BODY_7|0
first-order logic|JJ NN|BODY_6:BODY_5:BODY_3:BODY_7|0
trait|NN|BODY_6:BODY_2:BODY_3|0
the completion procedure|DT NN NN|BODY_5:BODY_34:BODY_1:BODY_3:BODY_9|0
larch|NN|BODY_6:BODY_2:BODY_1:BODY_3|0
w|NN|BODY_11:BODY_1:BODY_3:BODY_7:BODY_9|0
one|CD|BODY_6:BODY_4:BODY_9|1
those|DT|BODY_11:BODY_3:BODY_4|0
cd|JJ|BODY_5:BODY_11:BODY_8|0
the checking|DT VBG|ABSTRACT_6:BODY_2|0
language|NN|BODY_6:BODY_5:BODY_2:BODY_3|0
inconsistencies|NNS|BODY_5:BODY_2:BODY_1:BODY_3:BODY_4|0
the conclusion|DT NN|BODY_14:BODY_3:BODY_44:BODY_19|5
naturalnumber|NN|BODY_6:BODY_2:BODY_1:BODY_10|0
the assumption|DT NN|BODY_5:BODY_4:BODY_8|0
(|-LRB-|BODY_6:BODY_19:BODY_7:BODY_9|0
both|DT|BODY_5:BODY_1:BODY_3:BODY_4|0
)|-RRB-|BODY_5:BODY_8:BODY_9|0
e|NN|BODY_18:BODY_2:BODY_10:BODY_7|1
users|NNS|BODY_2:BODY_1:BODY_3:BODY_7|0
clauses|NNS|BODY_23:BODY_3:BODY_14:BODY_4|0
components|NNS|BODY_2:BODY_4|0
lsl traits|JJ NNS|BODY_12:BODY_5:BODY_1:BODY_3|0
[|NN|BODY_23:BODY_4:BODY_20|0
use|NN|BODY_4:BODY_10:BODY_7|0
0 /|CD NN|BODY_6:BODY_5:BODY_16:BODY_19|2
an inconsistency|DT NN|BODY_2:BODY_1:BODY_4:BODY_7|0
the user|DT NN|BODY_2:BODY_1:BODY_4:BODY_9|0
identities|NNS|BODY_11:BODY_5:BODY_18:BODY_3|1
the larch shared language|DT NN VBN NN|BODY_5:BODY_2|0
some|DT|BODY_6:BODY_1:BODY_10|0
terms|NNS|BODY_6:BODY_3|0
converts|NNS|BODY_12:BODY_17:BODY_20|0
y|PRP|BODY_12:BODY_6:BODY_14:BODY_9|1
implications|NNS|BODY_2:BODY_1:BODY_4:BODY_9|0
the number|DT NN|BODY_6:BODY_2:BODY_9|0
the equations|DT NNS|BODY_5:BODY_3:BODY_10|1
the view|DT NN|BODY_12:BODY_14:BODY_10:BODY_7:BODY_8|0
>|NN|BODY_16:BODY_13:BODY_20:BODY_9|0
the partitioned|DT NN|BODY_11:BODY_5:BODY_1:BODY_10|0
z|FW|BODY_10:BODY_8|1
case|NN|BODY_11:BODY_17:BODY_2|2
the hypothesis|DT NN|BODY_6:BODY_11:BODY_27:BODY_1:BODY_37|4
0 i|CD NN|BODY_25:BODY_3|0
lp.|VBG|BODY_6:BODY_5:BODY_4:BODY_7:BODY_8|0
coord|NN|BODY_16:BODY_19:BODY_10:BODY_20|0
specification|NN|BODY_2:BODY_3:BODY_8|0
v 0|RB CD|BODY_41:BODY_3:BODY_7|1
an identity|DT NN|BODY_16:BODY_2:BODY_3:BODY_29|2
something|NN|BODY_6:BODY_4:BODY_8|0
user assistance|NN NN|BODY_2:BODY_3:BODY_4|0
consequences|NNS|BODY_2:BODY_10:BODY_9|0
10 shows|CD NNS|BODY_2|0
an abbreviation|DT NN|BODY_2|0
the signatures|DT NNS|BODY_2|0
this section|DT NN|BODY_6:BODY_1:BODY_3|0
the hypotheses|DT NNS|BODY_15:BODY_2|0
clause|NN|BODY_5:BODY_2:BODY_4:BODY_7|0
the problem|DT NN|BODY_1:BODY_2:BODY_7|0
all traits|DT NNS|BODY_52:BODY_43:BODY_2:BODY_10:BODY_9|0
next .q/ < e|JJ IN NN NN|BODY_17:BODY_14|0
the commands|DT NNS|BODY_3:BODY_4|0
questions|NNS|BODY_7:BODY_9|0
what|WP|BODY_12:BODY_1:BODY_2:BODY_8|0
the larch prover|DT NN NN|BODY_2:BODY_3|0
origin|NN|BODY_6:BODY_4|0
section 2|NN CD|BODY_1:BODY_14|0
a deduction rule|DT NN NN|BODY_16:BODY_2:BODY_7|2
a system|DT NN|BODY_6:BODY_2:BODY_1:BODY_8:BODY_9|1
the need|DT NN|BODY_12:BODY_2:BODY_4|0
the invariant|DT NN|BODY_3|0
lsl specification|NN NN|BODY_11:BODY_25|0
subgoals|NNS|BODY_2:BODY_3:BODY_4|0
the form|DT NN|BODY_6:BODY_7|0
view|NN|BODY_6:BODY_5:BODY_4|0
a view|DT NN|BODY_11:BODY_15:BODY_3|0
induction rules|NN NNS|BODY_2:BODY_1:BODY_7|0
the traits|DT NNS|BODY_6:BODY_2:BODY_9|0
operator theories|NN NNS|BODY_6:BODY_13:BODY_1|0
the validity|DT NN|BODY_5:BODY_3|0
fg|JJ|BODY_11:BODY_18:BODY_10:BODY_7|0
commands|NNS|BODY_22:BODY_2:BODY_3|0
the three rewrite rules|DT CD JJ NNS|BODY_12:BODY_8|0
e/|NN|BODY_16:BODY_21|0
programmers|NNS|BODY_5:BODY_2:BODY_9|0
the proof obligation|DT NN NN|BODY_16:BODY_1:BODY_2:BODY_4|0
an object|DT NN|BODY_3:BODY_4|0
the only user guidance|DT JJ NN NN|BODY_22:BODY_20|0
z #|FW #|BODY_11:BODY_16:BODY_17|0
circuits|NNS|ABSTRACT_8:BODY_8|0
the lp|DT NN|BODY_5:BODY_2:BODY_7|0
the assertion|DT NN|BODY_32:BODY_15|0
its theory|PRP$ NN|BODY_5:BODY_2|0
assertions|NNS|BODY_6:BODY_9|0
the semantics|DT NNS|BODY_5:BODY_1:BODY_7|0
an equation|DT NN|BODY_22:BODY_1:BODY_3|0
sorts e|NNS NN|BODY_12:BODY_3:BODY_4|0
larch interface languages|NN NN NNS|BODY_1:BODY_2|0
backward inference|JJ NN|BODY_5:BODY_3|0
the specification|DT NN|BODY_3:BODY_8|1
the syntax|DT NN|ABSTRACT_2:BODY_1:BODY_2:BODY_4|0
its axioms|PRP$ NNS|BODY_11:BODY_4:BODY_48|0
the case|DT NN|BODY_5:BODY_1:BODY_2|0
the specifier|DT NN|BODY_4|0
an lsl trait|DT JJ NN|BODY_5:BODY_28:BODY_8|0
for|IN|BODY_2:BODY_7|0
two cases|CD NNS|BODY_11:BODY_10:BODY_7|0
empty 0 .c/ dd|JJ CD NN NN|BODY_11:BODY_20|0
the larch|DT NN|BODY_5:BODY_2:BODY_4|0
variables x|NNS SYM|BODY_14:BODY_9|0
critical pairs|JJ NNS|BODY_6:BODY_3|0
assistance|NN|BODY_3:BODY_9|0
these properties|DT NNS|BODY_2:BODY_9|0
each interface|DT NN|BODY_2|0
the component communicates|DT NN NNS|BODY_3|0
the observable state and state transformations|DT JJ NN CC NN NNS|BODY_3|0
the simplicity or complexity|DT NN CC NN|BODY_2|0
q/|NN|BODY_5:BODY_9|0
a conjecture|DT NN|BODY_5:BODY_1:BODY_7|0
figure 7|NN CD|BODY_3:BODY_10|0
larch specifications|NN NNS|BODY_6:BODY_2|0
condition 2|NN CD|BODY_1:BODY_8|0
displayable|JJ|BODY_3:BODY_7|0
response|NN|BODY_6:BODY_2|0
this trait|DT NN|BODY_23:BODY_3:BODY_4|0
guidance|NN|BODY_33:BODY_5|1
's assumption|POS NN|BODY_5:BODY_8|0
empty 0|JJ CD|BODY_6:BODY_13|0
lemmas|NNS|BODY_5:BODY_4|0
fg and insert|NN CC NN|BODY_3:BODY_7|0
|NNP|BODY_2|0
[9|CD|BODY_7|0
the latter|DT NN|BODY_2:BODY_3|0
iterators|NNS|BODY_7|0
the file totalorder obligations|DT NN NN NNS|BODY_27|0
0 <|CD NN|BODY_24:BODY_4|2
a specifier|DT NN|BODY_3:BODY_4|0
the same id|DT JJ NN|BODY_6:BODY_10|0
#|#|BODY_21:BODY_4|0
the lsl ( larch|DT NN -LRB- NN|ABSTRACT_2|0
sequences|NNS|BODY_6|0
language specifications|NN NNS|TITLE_2:BODY_2|0
a two-tiered definitional approach|DT JJ JJ NN|BODY_16|0
the current state|DT JJ NN|BODY_2|0
knowledge|NN|BODY_8|0
the explicit theory|DT JJ NN|BODY_46:BODY_1:BODY_7|0
the rewrite rules|DT NN NNS|BODY_4:BODY_7:BODY_8|1
the meanings|DT NNS|BODY_12|0
a theorem|DT NN|BODY_6:BODY_2:BODY_4|0
a set|DT NN|BODY_3:BODY_10:ABSTRACT_10|0
two kinds|CD NNS|BODY_2|0
the place|DT NN|BODY_5:BODY_42|2
nonconsequence|NN|BODY_4:BODY_7|0
the components|DT NNS|BODY_3:BODY_7|0
a newly added window|DT RB VBN NN|BODY_6:BODY_12|0
linearcontainer converts|NN NNS|BODY_19:BODY_10|0
.y// ) isgenerated .x [ y/|NN -RRB- VBN NN NN NN|BODY_17|0
objects|NNS|BODY_4:BODY_8|0
the assumptions|DT NNS|BODY_5:BODY_27:BODY_1|0
the trait linearcontainer|DT NN NN|BODY_6:BODY_2:BODY_1|0
the propositions|DT NNS|BODY_12:BODY_21:BODY_39:BODY_49:BODY_4|0
the set|DT NN|BODY_5:BODY_8|0
lslc formulates|JJ NNS|BODY_1:BODY_2|0
some sort|DT NN|BODY_11|0
the complete sets|DT JJ NNS|BODY_2:BODY_9|0
the transitive closure|DT JJ NN|BODY_2|0
the same place|DT JJ NN|BODY_2|0
all elements|DT NNS|BODY_8|0
the other operators|DT JJ NNS|BODY_4:BODY_9|0
empty .q|JJ NN|BODY_13:BODY_3|1
our confidence|PRP$ NN|BODY_4:BODY_7|0
their value|PRP$ NN|BODY_7|0
most finished specifications|JJS VBN NNS|BODY_27|0
emptyv|NNS|BODY_2|0
assumes|VBZ|BODY_2|0
forall cd|JJ NN|BODY_2|0
trait view|NN NN|BODY_5:BODY_1:BODY_2|1
the boolean expression|DT JJ NN|BODY_12:BODY_8|0
a claim|DT NN|BODY_2:BODY_8|0
most users|JJS NNS|BODY_2|0
a trait t|DT NN NN|BODY_3:BODY_4|0
the subgoal x|DT NN SYM|BODY_15|0
tools|NNS|BODY_2:BODY_4|0
the expense|DT NN|BODY_7|0
specialized vocabularies|VBN NNS|BODY_4|0
[18] )|JJ -RRB-|BODY_4|0
x c|NN NN|BODY_10:BODY_4|0
the first step|DT JJ NN|BODY_1:BODY_4|0
addition|NN|BODY_14:BODY_8|0
) c need|-RRB- NN NN|BODY_2|0
foreground and background colors|NN CC NN NNS|BODY_5|0
termination|NN|BODY_16:BODY_2|0
v|NN|BODY_4:BODY_8|0
our approach|PRP$ NN|BODY_2|1
further facilities|JJ NNS|BODY_5|0
the first implication|DT JJ NN|BODY_3:BODY_7|0
most|JJS|BODY_1:BODY_3|0
the second equation|DT JJ NN|BODY_3:BODY_10|0
this rewrite rule|DT NN NN|BODY_13:BODY_8|2
that users|WDT NNS|BODY_11|0
the operators|DT NNS|BODY_5:BODY_7|0
sort|NN|BODY_5:BODY_7|0
another independent|DT JJ|BODY_6|0
automatic normalization|JJ NN|BODY_6:BODY_5|0
the reasons|DT NNS|BODY_3|0
three additional axioms|CD JJ NNS|BODY_4|0
a clu procedure|DT NN NN|BODY_3|0
lsl theories|JJ NNS|BODY_2|0
checkable claims|JJ NNS|BODY_3:BODY_7|0
the conversion|DT NN|BODY_1:BODY_3|0
5|CD|BODY_2|0
the associative-commutative theory|DT JJ NN|BODY_3|0
user interaction|NN NN|BODY_5:BODY_15:BODY_14|0
isempty and 2|JJ CC CD|BODY_12:BODY_10|0
this paper|DT NN|BODY_1:BODY_8|0
the equation|DT NN|BODY_11:BODY_1:BODY_3|1
theorems|NNS|BODY_5:BODY_3|0
interface specifications|NN NNS|BODY_5:BODY_28:BODY_10|0
such deduction rules|JJ NN NNS|BODY_2|0
manipulation|NN|BODY_6|0
theory containment fall|NN NN NN|BODY_2|0
three categories|CD NNS|ABSTRACT_2:BODY_2:BODY_4|0
a|DT|BODY_11:BODY_3|1
a check|DT NN|BODY_6:BODY_5|0
its rewrite rules|PRP$ NN NNS|BODY_15|0
l/ i .x/ e l/|FW FW FW NN FW|BODY_2|0
the booleans|DT NNS|BODY_13|0
the interface specification language|DT NN NN NN|BODY_4|0
multiple induction rules|JJ NN NNS|BODY_2|0
the next step|DT JJ NN|BODY_2|0
the facts|DT NNS|BODY_6:BODY_2|0
specifications-claims|NNS|BODY_3|0
figure 4|NN CD|BODY_5:BODY_4:BODY_10|0
the current hypotheses|DT JJ NNS|BODY_6:BODY_1|0
helpful comments and suggestions|JJ NNS CC NNS|BODY_2|0
this problem|DT NN|BODY_1:BODY_3|0
the lemmas|DT NNS|BODY_3:BODY_7|0
the same implication and case|DT JJ NN CC NN|BODY_9|1
the following lp commands|DT VBG NN NNS|BODY_17:BODY_7|0
logic|NN|BODY_2|0
this check|DT NN|BODY_5:BODY_3|0
the variable x|DT JJ SYM|BODY_6|0
the logical power|DT JJ NN|BODY_3|0
new consequences|JJ NNS|BODY_6:BODY_7|0
t otalorder|NN NN|BODY_2|0
a logical system|DT JJ NN|BODY_5:BODY_1:BODY_3:BODY_4|0
theories|NNS|BODY_3:BODY_10|0
y & y|RB CC RB|BODY_25|0
[9 , 10 , 11 , 12]|CD , CD , CD , CD|BODY_2|0
side effects|NN NNS|BODY_5|0
each trait t|DT NN NN|BODY_5:BODY_16|0
more guidance|JJR NN|BODY_2:BODY_3|0
window|NN|BODY_2:BODY_4|0
figure 1|NN CD|BODY_6:BODY_1|0
<|NN|BODY_15:BODY_14:BODY_10|0
concurrent algorithms [6|JJ NNS NNS|BODY_9|0
a signature|DT NN|BODY_2:BODY_3|0
the command|DT NN|BODY_1|0
the first|DT JJ|BODY_2:BODY_4|0
section 7|NN CD|BODY_2:BODY_1|0
x/ qed figure 9|NN VBD NN CD|BODY_26|0
that case|DT NN|BODY_4|0
the additional hypothesis t|DT JJ NN WDT|BODY_26|0
the third alternative|DT JJ NN|BODY_12|0
exception handling|NN NN|BODY_6|0
our research and plans|PRP$ NN CC NNS|BODY_3|0
linearcontainer .e|NN NN|BODY_1:BODY_8|0
insert|NN|BODY_18:BODY_8|0
the interfaces|DT NNS|BODY_2|0
the proof mechanisms|DT NN NNS|BODY_5:BODY_1|0
diagnostics|NNS|BODY_11:BODY_4|0
f g|NN NN|BODY_11:BODY_19|0
0 handle case e|CD NN NN NN|BODY_22:BODY_29|2
errors|NNS|BODY_5:BODY_3|0
addw indow|NN NN|BODY_4|0
proof|NN|BODY_34:BODY_17|1
the inductive proof|DT JJ NN|BODY_2|0
two tools|CD NNS|ABSTRACT_4|0
reasoning|NN|ABSTRACT_7:BODY_7|0
case e|NN NN|BODY_27:BODY_20|2
case analysis|NN NN|BODY_6:BODY_16:BODY_1|0
the lsl checker ) diagnostics obligations user lp|DT JJ NN -RRB- NNS NNS NN NN|BODY_2|0
the preservation|DT NN|BODY_2|0
queues|NNS|BODY_4|0
that lslc extracts|DT JJ NNS|BODY_3:BODY_8|0
0 # z|CD # FW|BODY_10:BODY_9|0
the performance|DT NN|BODY_2:BODY_7|0
) c t|-RRB- NN NN|BODY_2|0
accuracy|NN|BODY_1|0
c t|NN NN|BODY_1|0
checks|NNS|BODY_1|0
precision|NN|BODY_2|0
the following two conditions|DT JJ CD NNS|BODY_2|0
these methods|DT NNS|BODY_1:BODY_4|0
the larch family|DT NN NN|BODY_12:BODY_14|0
# figure 13|# NN CD|BODY_10|0
priority queues|NN NNS|BODY_5|0
further|RBR|BODY_11|0
common classes|JJ NNS|BODY_2|0
regions|NNS|BODY_9|0
shape or contiguity|NN CC NN|BODY_8|0
:.x|JJ|BODY_24|0
region( t|JJ NN|BODY_10|0
cont|NN|BODY_10|0
language )|NN -RRB-|ABSTRACT_3|0
introduces|NN|BODY_11|0
t i|WDT NN|BODY_21|0
r, fore|JJ NN|BODY_12|0
the variables|DT NNS|BODY_20|0
reason|NN|BODY_5:BODY_9|0
converts origin|NNS NN|BODY_9|0
the traits priority queue|DT NNS NN NN|BODY_2:BODY_8|0
.new / and rest .new/|JJ NN CC NN NN|BODY_5:BODY_9|0
clip|NN|BODY_11|0
specification languages|NN NNS|BODY_15:BODY_13|0
t 0|WDT CD|BODY_23|0
this informal argument|DT JJ NN|BODY_2|0
region|NN|BODY_2:BODY_4|0
bool|NN|BODY_6:BODY_1|0
induction )|NN -RRB-|BODY_6|0
:.x < x/|NN NN NN|BODY_11:BODY_5|0
the other hand|DT JJ NN|BODY_1|0
an axiom|DT NN|BODY_12:BODY_9|0
both t i and e|DT WDT NN CC NN|BODY_22|0
sample cartesian view specification|NN NN NN NN|BODY_11|0
this deduction rule|DT NN NN|BODY_1:BODY_19|0
the proof attempt|DT NN NN|BODY_7|0
another|DT|BODY_10|0
programming language|VBG NN|BODY_3|0
checking specifications|VBG NNS|BODY_3|1
implied equation|JJ NN|BODY_23|0
region r % nothing|NN NN NN NN|BODY_7|0
empty .c/ and e 2 0 c dd e|JJ NN CC NN CD CD NN NN NN|BODY_12|0
the syntactic amenities|DT NN NNS|BODY_4|0
windows|NNS|BODY_5|0
formulas|NNS|BODY_6|0
the trait totalorder|DT NN NN|BODY_3:BODY_4|0
point cd|NN NN|BODY_6|0
a way|DT NN|BODY_6|0
the given operators|DT VBN NNS|BODY_7|0
definitions|NNS|BODY_3|0
primitive terms|JJ NNS|BODY_3|0
color , id|NN , NN|BODY_13|0
our attempted proof|PRP$ JJ NN|BODY_3|0
elements (|NNS -LRB-|BODY_10|0
additional hypotheses|JJ NNS|BODY_14|0
entails|NNS|BODY_3|0
inspection|NN|BODY_6:BODY_3|0
new constants|JJ NNS|BODY_19|0
# z|# FW|BODY_15:BODY_14|0
a subgoal e|DT NN NN|BODY_24|0
semantic properties|JJ NNS|BODY_27:BODY_25|0
e//|JJ|BODY_9|0
0]|DT|BODY_8|0
the appearance|DT NN|BODY_12|0
simpler ordering methods|JJR VBG NNS|BODY_3|0
e// dd e rest .insert .new|JJ JJ NN NN NN NN|BODY_8|0
the role|DT NN|BODY_8|0
features|NNS|BODY_4|0
substitutes|NNS|BODY_18|0
e next .insert .q|NN JJ NN NN|BODY_12|0
the trait hierarchy|DT NN NN|BODY_5:BODY_4|0
12 ) defines|CD -RRB- NNS|BODY_2|0
w tuple|NN NN|BODY_9|0
next , rest , isempty next .insert .new|JJ , NN , JJ JJ NN NN|BODY_7|0
its equational theory|PRP$ JJ NN|BODY_10:BODY_9|0
our work|PRP$ NN|BODY_2:BODY_3|0
language-specific notations|JJ NNS|BODY_3|0
proc ( v|NN -LRB- FW|BODY_5|0
e/ dd|NN NN|BODY_14|0
c/|NN|BODY_2:BODY_8|0
a better chance|DT JJR NN|BODY_3:BODY_10|0
a semantics|DT NNS|BODY_3|0
qed|VBD|BODY_22|0
hypothesis|NN|BODY_23|0
a sample interface specification|DT NN NN NN|BODY_2|0
normal form|JJ NN|BODY_5:BODY_7|0
next 0 .new /|JJ CD JJ NNS|BODY_10|0
semantic claims|JJ NNS|BODY_1:BODY_3|0
associated semantic checks|VBN JJ NNS|BODY_6|0
includes region , displayable( w )|VBZ NN , NN NN -RRB-|BODY_8|0
some sort c|DT NN NN|BODY_9|0
wid forall w|JJ JJ NN|BODY_14|0
a basis|DT NN|BODY_10|0
the necessary inferences|DT JJ NNS|BODY_35|0
the interface specification|DT NN NN|BODY_13|0
machine analysis|NN NN|BODY_5|0
nat origin dd [0|NN NN JJ CD|BODY_7|0
cd and cd 0|JJ CC JJ CD|BODY_9|0
the equality operator|DT NN NN|BODY_6|0
static semantics|JJ NNS|BODY_5:ABSTRACT_3:BODY_3|0
object t|NN NN|BODY_13|0
a new operator|DT JJ NN|BODY_13|0
trait v iew|NN NN NN|BODY_4|0
's|POS|BODY_5:BODY_14|0
a binary operator|DT JJ NN|BODY_22|0
rest 0 .new / dd rest|NN CD JJ NNS VBP NN|BODY_12|0
.cd 0 # cd 0|DT CD # VBD CD|BODY_6:BODY_7|0
coord cd #|NN NN #|BODY_3|0
content and clipping regions|NN CC NN NNS|BODY_4|0
empty .q/|JJ JJ|BODY_18|0
q , e|NN , NN|BODY_11|0
g|NN|BODY_16:BODY_17|0
dd y|VBP NN|BODY_14|0
the axiom|DT NN|BODY_16|0
the second and third axioms|DT JJ CC JJ NNS|BODY_6|0
new|JJ|BODY_10|0
figure 8|NN CD|BODY_13:BODY_1|0
a priority queue specification|DT NN NN NN|BODY_26|0
present there|JJ EX|BODY_24|0
the same relative coordinate|DT JJ JJ VBP|BODY_2|0
the information|DT NN|BODY_2|0
the union|DT NN|BODY_4|0
isgenerated .feg/|VBN NN|BODY_16|0
unique interpretations|JJ NNS|BODY_7:BODY_9|0
then e else|RB NN RB|BODY_13|0
next .new /|JJ JJ NNS|BODY_11|0
elements|NNS|BODY_6|0
lp proof obligations|NN NN NNS|BODY_5:ABSTRACT_5|0
who|WP|BODY_6:BODY_3|0
the appearance %|DT NN NN|BODY_8|0
this point|DT NN|BODY_1|0
.e/|NN|BODY_5|0
relative completeness|JJ NN|BODY_7:ABSTRACT_9:BODY_9|0
including priorityqueue|VBG NN|BODY_9|0
the individual specifications|DT JJ NNS|BODY_6|0
summary|NN|BODY_2|0
success diagnostics|NN NNS|BODY_4|0
introduces r|NN NN|BODY_5|0
priorityqueue ( figure|JJ -LRB- NN|BODY_2|0
) else e rest .insert .q|-RRB- RB NN NN NN NN|BODY_15|0
then new else|RB JJ RB|BODY_16|0
the axiomatizations|DT NNS|BODY_5|0
the use theories|DT VB NNS|BODY_3|0
a multisorted fragment|DT JJ NN|BODY_10|0
an acceptable amount|DT JJ NN|BODY_5|0
mistakes|NNS|BODY_22:BODY_1|0
# insert .s|# NN NNS|BODY_13|0
this implication|DT NN|BODY_3|1
initial or final algebras|JJ CC JJ NNS|BODY_4|0
metatheorems|NNS|BODY_2|0
other uses|JJ NNS|BODY_5:ABSTRACT_5|0
q|RB|BODY_5:BODY_24|0
the other two categories|DT JJ CD NNS|BODY_2|0
testing|NN|BODY_6:BODY_7|0
's facilities|POS NNS|BODY_2:BODY_4|0
0 critical-pairs|CD NNS|BODY_31|1
empty 0 .q/ dd|JJ CD JJ VBP|BODY_17|0
the rewriting theory|DT VBG NN|BODY_7|0
lslc and lp|NN CC NN|BODY_5|0
a deduction rule equivalent|DT NN NN NN|BODY_15|0
this position|DT NN|BODY_3|0
facts|NNS|BODY_9|0
only one|RB CD|BODY_32|0
the lp command|DT NN NN|BODY_1|0
the first case|DT JJ NN|BODY_1:BODY_4|2
x 0|SYM CD|BODY_5|0
the operands|DT NNS|BODY_3|0
additional checking|JJ NN|BODY_4|0
the interface|DT NN|BODY_3|0
the id|DT NN|BODY_4|0
> f or <|FW NN CC NN|BODY_8|0
the meaning|DT NN|BODY_3|0
's rewriting theory|POS VBG NN|BODY_2:BODY_7|0
no obvious reason|DT JJ NN|BODY_4|0
a problem|DT NN|BODY_5:BODY_2|0
somewhat different ways|RB JJ NNS|BODY_3|0
prove|VB|BODY_19|0
w/|NN|BODY_5|0
the induction hypothesis|DT NN NN|BODY_7|1
a strict partial order|DT JJ JJ NN|BODY_2:BODY_3|0
forall q|JJ NN|BODY_10|0
e 2|NN CD|BODY_7|0
sets|NNS|BODY_2|0
the lack|DT NN|BODY_2|0
larch interface specifications|NN NN NNS|ABSTRACT_4:BODY_4|0
no view|DT NN|BODY_4|0
that lsl|WDT NN|BODY_4|0
no obvious definition|DT JJ NN|BODY_4|0
sample view specification|NN NN NN|BODY_21|0
statements|NNS|BODY_3|0
their flaws|PRP$ NNS|BODY_5|0
the left hand side|DT JJ NN NN|BODY_10|0
the interpretation|DT NN|BODY_2:BODY_3|0
the incompleteness|DT NN|BODY_3|0
lp-suggested partial orderings|JJ JJ NNS|BODY_4|0
six sets|CD NNS|BODY_12|0
the explicit theories|DT JJ NNS|BODY_51:BODY_9|0
interesting conjectures|JJ NNS|BODY_16|0
the subgoal|DT NN|BODY_2|0
z # y 0|FW # RB CD|BODY_13|0
.x >|JJ NN|BODY_18|0
yp|NNP|BODY_2|0
much the same way|RB DT JJ NN|BODY_7|0
stacks|NNS|BODY_3|0
methods|NNS|BODY_2|0
the primitive terms|DT JJ NNS|BODY_4|0
help|NN|ABSTRACT_5|0
james|NNS|BODY_4|0
the first implementation|DT JJ NN|BODY_2|0
the lsl checker )|DT NN NN -RRB-|ABSTRACT_4:BODY_4|0
cd 0|JJ CD|BODY_4|0
[ lp|NN NN|BODY_12|0
the issue|DT NN|BODY_15|0
adds|VBZ|BODY_14|0
separate checks|JJ NNS|BODY_2|0
their use|PRP$ NN|BODY_3|0
a precise definition|DT JJ NN|BODY_4|0
conjunctions|NNS|BODY_5|0
our approaches|PRP$ NNS|BODY_2|0
incomplete rewriting systems|JJ VBG NNS|BODY_11|0
declare operators e|VBP NNS NN|BODY_15|0
f|NN|BODY_12|0
the file totalorder assertions|DT NN NN NNS|BODY_5:BODY_14|0
both lslc and lp|DT NN CC NN|BODY_7|0
sorts|NNS|BODY_3|0
these|DT|BODY_1|0
the same|DT JJ|BODY_3:BODY_9|0
< y dd y >|NN RB JJ RB NN|BODY_21|0
clause amounts|NN NNS|BODY_4|0
no lsl theory|DT JJ NN|BODY_3|0
no term|DT NN|BODY_5|0
other windows|JJ NNS|BODY_17|0
propositional calculus|JJ NN|BODY_4|0
the checkable claims|DT JJ NNS|BODY_2|0
the specifications|DT NNS|BODY_5|0
a second tool|DT JJ NN|ABSTRACT_2:BODY_2|0
enough axioms|JJ NNS|BODY_4|0
a fixed set|DT JJ NN|BODY_2|0
< f|NN NN|BODY_9|0
v 0 d addw.v|FW CD VBD NN|BODY_6|0
a new window|DT JJ NN|BODY_7|0
uses|VBZ|BODY_5:BODY_9|0
name totalorder consequences|NN NN NNS|BODY_10|0
the most recent version|DT RBS JJ NN|BODY_7|0
's axioms|POS NNS|BODY_8:BODY_9|0
a finite set|DT JJ NN|BODY_6|0
normalization|NN|BODY_7|0
equations and rewrite rules|NNS CC NN NNS|BODY_1:BODY_8|0
0 6d v|CD NN RB|BODY_30|1
the relation|DT NN|BODY_3|0
several facilities|JJ NNS|BODY_3|0
new , insert c|JJ , JJ NN|BODY_6|0
the typical pattern|DT JJ NN|BODY_3|0
any extension|DT NN|BODY_2|0
forward inference|JJ NN|BODY_3|0
the order|DT NN|BODY_2|0
two hypotheses|CD NNS|BODY_20|0
a number|DT NN|BODY_5|0
one trait|CD NN|BODY_9|0
more user guidance|JJR NN NN|BODY_4|0
term rewriting modulo operator theories|NN VBG NN NN NNS|BODY_2|0
the change|DT VBP|BODY_8|0
2 0|CD CD|BODY_8|0
an attempted proof|DT VBN NN|BODY_1:BODY_3|0
's completion procedure|POS NN NN|BODY_2:BODY_3|0
mart-n abadi|JJ NN|BODY_3|0
a total ordering relation|DT JJ NN NN|BODY_11|0
the normalized implication hypothesis casing|DT JJ NN NN NN|BODY_4|1
a specific programming language|DT JJ VBG NN|BODY_5|0
.insert .s|NN NNS|BODY_15|0
insert .rest.q/|JJ NN|BODY_18|0
's converts clauses|POS NNS NNS|BODY_8|0
the case hypothesis t|DT NN NN NN|BODY_2|0
section 6|NN CD|BODY_2|0
detecting inconsistencies|VBG NNS|BODY_2|0
expository purposes|JJ NNS|BODY_2|0
this knowledge|DT NN|BODY_2|0
a slightly more realistic setting|DT RB RBR JJ NN|BODY_4|1
appearance|NN|BODY_5|0
y 0|RB CD|BODY_6|0
others|NNS|BODY_2:BODY_8|0
the other equations|DT JJ NNS|BODY_7|0
proving consistency|VBG NN|BODY_3|0
feg|NN|BODY_4|0
0 < next.c 0 /|CD NN JJ CD NN|BODY_19|1
a brief introduction|DT JJ NN|BODY_2|0
many|JJ|BODY_3|0
the larch power|DT NN NN|ABSTRACT_2|0
these components|DT NNS|BODY_2|0
0 //|CD NNS|BODY_26|1
inducthyp figure 10|JJ NN CD|BODY_32|1
larch/clu interface specification 2|NN NN NN CD|BODY_11|0
this converts clause|DT NNS NN|BODY_23|0
the built-in &-splitting law|DT JJ NN NN|BODY_3|0
these claims|DT NNS|BODY_5:BODY_2:BODY_1|0
.cd 0 then else view|NN CD RB JJ NN|BODY_6|0
a partitioned|DT JJ|BODY_1:BODY_3|0
two windows|CD NNS|BODY_5|0
false|JJ|BODY_8|1
w , cd|NN , NN|BODY_15|0
n|RB|BODY_17|0
the same trait|DT JJ NN|BODY_5:BODY_9|0
checkable redundancy|JJ NN|BODY_4|0
each|DT|BODY_11:BODY_13|0
/ implies|DT VBZ|BODY_11|0
the binary relations < and >|DT JJ NNS NN CC NN|BODY_4|0
no way|DT NN|BODY_25|0
a converts clause|DT NNS NN|BODY_10|0
empty .c/|JJ NN|BODY_21|0
precise claims|JJ NNS|BODY_2|0
a diagnostic ( incomplete proof )|DT JJ -LRB- JJ NN -RRB-|BODY_5|0
totalorder assertions|NN NNS|BODY_9|0
an axiom schema|DT NN NN|BODY_5|0
i .e/ dd e )|FW FW JJ NN -RRB-|BODY_10|0
dd|NN|BODY_3|0
its equations|PRP$ NNS|BODY_14|0
standard subtheories|JJ NNS|BODY_12|0
priorityqueue converts|JJ NNS|BODY_9|0
each specification|DT NN|BODY_1|0
consistency )|NN -RRB-|BODY_3|0
:.x > x/|JJ NN NN|BODY_17|0
> z /|NN FW FW|BODY_19|0
a proof (|DT NN -LRB-|BODY_3|0
a single sort|DT JJ NN|BODY_3|0
next 0 .q/ dd next 0 .q/|JJ CD JJ VBP JJ CD JJ|BODY_13|0
total orders|JJ NNS|BODY_12|0
next .c|JJ NN|BODY_25|1
( e .g|-LRB- NN NN|ABSTRACT_6|0
its design and development|PRP$ NN CC NN|BODY_1:ABSTRACT_1|0
communication|NN|BODY_3|0
the view addw.v|DT NN NN|BODY_10|0
window w|NN NN|BODY_9|0
priority queue|NN NN|BODY_3:BODY_10|0
lsl traits z|JJ NNS FW|BODY_6|0
an induction scheme|DT NN NN|BODY_10|0
their help|PRP$ NN|BODY_4|0
figure 5|NN CD|BODY_1|0
lslc cannot discharge |JJ NN VB|BODY_5|0
point|NN|BODY_14|0
dd rest.q/|VBP NN|BODY_16|0
an indirect method|DT JJ NN|BODY_16|0
e/ else q|NN RB NN|BODY_19|0
the terms|DT NNS|BODY_8|0
an additional operator|DT JJ NN|BODY_3|0
our rewriting systems|PRP$ VBG NNS|BODY_2|0
a term|DT NN|BODY_5|0
the first disjunct|DT JJ NN|BODY_5|1
nat , y|NN , NN|BODY_6|0
the knuth-bendix completion procedure [13|DT NN NN NN NN|BODY_7|0
nonterminating rewriting sequences|JJ NN NNS|BODY_11|0
16 ]|CD NNS|BODY_8|0
treats|NNS|BODY_14|0
8|CD|BODY_3|0
two nonempty operator theories|CD JJ NN NNS|BODY_2|0
parts|NNS|BODY_9|0
results|NNS|BODY_4|0
a combined specification|DT VBN NN|BODY_3|0
exempting forall cd|JJ JJ NN|BODY_3|0
t otalorder .e|NN NN NN|BODY_7|0
a case split or proof|DT NN NN CC NN|BODY_5|0
the sample traits|DT NN NNS|BODY_5|0
name totalorder|NN NN|BODY_8|0
inw .addw.v|JJ NN|BODY_3|0
programs|NNS|BODY_4|0
mcallester [14] )|NN NN -RRB-|BODY_8|0
assuming x|VBG SYM|BODY_8|0
operations|NNS|BODY_2|0
brevity|NN|BODY_3|0
's basic units|POS JJ NNS|BODY_7|0
the equation e dd|DT NN NN NN|BODY_4|0
lslc )|NN -RRB-|BODY_3|0
2 )|CD -RRB-|BODY_9|0
inw and both 2 's|JJ CC DT CD POS|BODY_2|0
the errors|DT NNS|BODY_2|0
e 2 alse|NN CD NN|BODY_7|1
the universally-quantified variable q|DT JJ JJ NN|BODY_6|1
the outermost|DT JJ|BODY_13|0
programming-|NNS|BODY_2|0
which 2|WDT CD|BODY_7|0
required checking condition|JJ NN NN|BODY_3|0
forall clauses|JJ NNS|BODY_5|0
ac c|NN NN|BODY_2|0
e 2 y yield|NN CD NN NN|BODY_13|0
two new constants|CD JJ NNS|BODY_4|0
the second implication|DT JJ NN|BODY_3|0
certifying|CD|BODY_3|0
0 6d v 0 complete handle case|CD NN RB CD JJ NN NN|BODY_23|1
none|NN|BODY_1|0
guarantees|NNS|BODY_6|0
type systems|NN NNS|BODY_8|0
their understanding|PRP$ NN|BODY_6|0
such|JJ|BODY_4|0
0 / critical-pairs casehyp|CD NN NNS NN|BODY_14|1
inw|NN|BODY_4|0
propositions ( equations|NNS -LRB- NNS|BODY_13|0
the last|DT JJ|BODY_3|0
the extent|DT NN|BODY_6|0
the last proof|DT JJ NN|BODY_4|0
the introduces|DT NNS|BODY_4|0
any fixed interpretations|DT JJ NNS|BODY_3|0
a critical part|DT JJ NN|BODY_1|0
its environment|PRP$ NN|BODY_4|0
its programming language|PRP$ NN NN|BODY_4|0
its simplicity or complexity|PRP$ NN CC NN|BODY_1|0
lp. z|NN FW|BODY_4|0
next , rest|JJ , NN|BODY_17|0
a subset|DT NN|BODY_9|0
two such tools|CD JJ NNS|BODY_2|0
a command|DT NN|BODY_24|0
interpretations|NNS|BODY_7|0
figure 12|NN CD|BODY_20|0
the subgoal t 0 2|DT NN NN CD CD|BODY_2|0
the kinds|DT NNS|BODY_4|0
comments|NNS|BODY_6|0
each operator|DT NN|BODY_7|0
t 1|WDT CD|BODY_11|0
set extensionality|NN NN|BODY_17|0
some sample traits-lsl|DT NN NN|BODY_6|0
figure 3|NN CD|BODY_24|0
0 < next.c 0 / handle case|CD NN JJ CD NN NN NN|BODY_18|1
asserts clauses and converts clauses|VBZ NNS CC NNS NNS|BODY_5|0
setting|NN|BODY_4|0
the identity function|DT NN NN|BODY_3|0
the window|DT NN|BODY_5|0
x dd y|SYM VB RB|BODY_18|0
the proofs|DT NNS|BODY_21|0
independent %|JJ NN|BODY_13:BODY_7|0
the window appearance|DT NN NN|BODY_11|0
four methods|CD NNS|BODY_2|0
a < .b c c/|DT NN JJ NN NN|BODY_5|1
contradiction|NN|BODY_15|0
unintended meanings|JJ NNS|BODY_6|0
uncovers|NNS|BODY_3|0
declare operators|VBP NNS|BODY_10|0
clause claims|NN NNS|BODY_2|0
priority queue .lp|NN NN NN|BODY_6|0
this approach|DT NN|BODY_1|0
natq )|NN -RRB-|BODY_5|0
a brief overview|DT JJ NN|BODY_4|0
the interpretations|DT NNS|BODY_16|0
coord emptyv|NN NNS|BODY_4|0
e 2 q ) :.e < next .q//|NN CD NN -RRB- NN NN JJ NN|BODY_8|1
the symbols 2|DT NNS CD|BODY_4|0
this conclusion|DT NN|BODY_2|1
critical-pairs|NNS|BODY_5|0
coord tuple|JJ NN|BODY_4|0
executability|NN|BODY_4|0
the presence|DT NN|BODY_4|0
figure 9|NN CD|BODY_6|0
the trait priority queue|DT NN NN NN|BODY_13|0
fg/ converts f g|JJ NNS NN NN|BODY_22|0
fg , insert|NN , NN|BODY_33|0
dd true|JJ JJ|BODY_8|0
general a partitioned|JJ DT NN|BODY_4|0
a few minor differences|DT JJ JJ NNS|BODY_2|0
implication hypothesis|NN NN|BODY_2|0
c z yield|NN FW NN|BODY_11|0
our informal proof|PRP$ JJ NN|BODY_5|0
view , naturalnumber|NN , NN|BODY_3|0
logical consequence|JJ NN|BODY_13:BODY_7|0
the lsl checker|DT JJ NN|BODY_2|0
such the discussion|JJ DT NN|BODY_12|0
the exempted terms|DT JJ NNS|BODY_4|0
module independence|NN NN|BODY_5|0
a given conjecture|DT VBN NN|BODY_7|0
the lsl tier|DT JJ NN|BODY_6|0
lp and lp|NN CC NN|BODY_4|0
figure|NN|BODY_1|0
some basic operators|DT JJ NNS|BODY_3|0
the entire proof script|DT JJ NN NN|BODY_3|0
the first three traits|DT JJ CD NNS|BODY_1|0
this assertion|DT NN|BODY_1|0
two equations|CD NNS|BODY_3|0
the assumed hypothesis|DT VBN NN|BODY_22|0
linearcontainer handle case :isempty .q|NN NN NN JJ NN|BODY_15|1
no traits|DT NNS|BODY_3|0
a trait hierarchy|DT NN NN|BODY_17|0
the texts|DT NNS|BODY_3|0
means|NNS|BODY_4|0
andres|NNS|BODY_2|0
the sense|DT NN|BODY_7|0
some properties|DT NNS|BODY_3|0
if .cd 0|IN NN CD|BODY_5|0
automatically orient many sets|RB JJ JJ NNS|BODY_3|0
several reasons|JJ NNS|BODY_7|0
the construction|DT NN|BODY_6|0
the associated deduction rule|DT VBN NN NN|BODY_6|0
both addw.v|DT NN|BODY_4|0
x [|NN FW|BODY_5|0
x dd|NN NN|BODY_4|0
the structure|DT NN|BODY_4|0
empty .c/ ) :.e 2 c/|JJ NN -RRB- NN CD NN|BODY_3|0
a change-an important activity|DT NN JJ NN|BODY_8|0
lp commands|NN NNS|BODY_5|0
implication|NN|BODY_11|0
user-supplied polynomial interpretations|JJ NN NNS|BODY_3|0
attention|NN|BODY_7|0
a collection|DT NN|BODY_3|0
another theory|DT NN|BODY_5|0
its knowledge|PRP$ NN|BODY_3|0
a multisorted first-order theory|DT JJ NN NN|BODY_3|0
an lsl specification|DT JJ NN|BODY_2|0
our specification|PRP$ NN|BODY_7|0
lsl abstractions|JJ NNS|BODY_9|0
preliminary versions|JJ NNS|BODY_2|0
semantic content|JJ NN|BODY_8|0
short|JJ|BODY_6|0
left|JJ|BODY_7|0
since v 0|IN NN CD|BODY_5|0
practice|NN|BODY_6:BODY_2|0
declare variables e|VBP NNS NN|BODY_6|0
its six equations|PRP$ CD NNS|BODY_4|0
also six methods|RB CD NNS|BODY_2|0
otalorder .e/|NN NN|BODY_7|0
the properties|DT NNS|BODY_2|0
terminating systems|NN NNS|BODY_8|0
the usual first-order axioms|DT JJ NN NNS|BODY_5|0
non-experts|NNS|BODY_8|0
most programming languages|JJS NN NNS|BODY_18|0
a specification (|DT NN -LRB-|BODY_3|0
lp facilities (|NN NNS -LRB-|BODY_4|0
a variable|DT JJ|BODY_6|0
section 5|NN CD|BODY_12|0
the appropriate rule|DT JJ NN|BODY_21|0
left to right or from|JJ TO JJ CC IN|BODY_6|0
their proofs|PRP$ NNS|BODY_7|0
simplify|VB|BODY_2|0
priority queue( nat|NN NN NN|BODY_4|0
work|NN|ABSTRACT_2|0
proof-method & , ) , normalization|NN CC , -RRB- , NN|BODY_2|0
trait assumes|NN VBZ|BODY_7|0
some proof obligations|DT NN NNS|BODY_2|0
the behavior|DT NN|BODY_3|0
division|NN|BODY_7|0
other traits|JJ NNS|BODY_2|0
the command instantiate z|DT NN NN NN|BODY_3|0
lslc discharge more proof obligations|JJR NN RBR JJ NNS|BODY_2|0
whose consistency|WP$ NN|BODY_6|0
totalorder qed proofs|VBP VBN NNS|BODY_6|0
properties|NNS|BODY_4|0
more work|JJR NN|BODY_6|0
relatively few )|RB JJ -RRB-|BODY_6|0
several proof obligations|JJ NN NNS|BODY_2|0
three proof obligations|CD NN NNS|BODY_22|0
e/ :.insert .s|NN NN NNS|BODY_20|0
section 3|NN CD|BODY_5|0
a hierarchy|DT NN|BODY_1:BODY_4|0
level|NN|BODY_7:BODY_8|0
serious drawbacks|JJ NNS|BODY_2|0
a nonterminating set|DT JJ NN|BODY_5|0
the revised specification|DT VBN NN|BODY_4|0
incompleteness|NN|BODY_4|0
terminating|NN|BODY_3|0
the induction rules|DT NN NNS|BODY_11|0
a simpler underlying semantics|DT JJR VBG NNS|BODY_17|0
the variables e and v|DT NNS NN CC RB|BODY_43|1
empty figure 2|JJ NN CD|BODY_14|0
useful feedback|JJ NN|BODY_3|0
claim|NN|BODY_4|0
the generated by|DT VBN IN|BODY_6|0
another kind|DT NN|BODY_3|0
the hypothesis t|DT NN NN|BODY_3|0
the cancellation law|DT NN NN|BODY_7|0
some traits|DT NNS|BODY_7|1
. f orall z /|. NN JJ FW FW|BODY_13|0
y dd z lp|RB JJ FW NN|BODY_12|0
a short time|DT JJ NN|BODY_2|0
empty .q 0 / handle case|JJ NN CD NN NN NN|BODY_12|1
additional generic operators|JJ JJ NNS|BODY_2|0
then|RB|BODY_5|0
the trait naturalnumber|DT NN NN|BODY_3|0
whenhyp|NNP|BODY_5|0
section 9|NN CD|BODY_1|0
each i|DT NN|BODY_15|0
such interface languages|JJ NN NNS|BODY_2|0
priorityqueue implication|NN NN|BODY_35|1
propositions|NNS|BODY_3|0
those proof obligations|DT NN NNS|BODY_4|0
dd t|JJ NN|BODY_3|0
the boolean operators|DT JJ NNS|BODY_4|0
abstract data types|JJ NNS NNS|BODY_6|0
the file lin-|DT NN NNS|BODY_5|0
a rewriting system|DT NN NN|BODY_5|0
the rewriting relation|DT NN NN|BODY_2|0
an extended example|DT JJ NN|BODY_2:ABSTRACT_1|0
sample lsl specification z|NN NN NN FW|BODY_15|0
backward inferences|JJ NNS|BODY_4|0
the accuracy|DT NN|BODY_12|0
empty .q 0 /|JJ NN CD NN|BODY_2|1
2 insert|CD NN|BODY_9|0
the complexity|DT NN|BODY_4|0
their cost|PRP$ NN|BODY_8|0
a priority queue .e|DT NN NN NN|BODY_4|0
another built-in deduction rule|DT JJ NN NN|BODY_9|1
all occurrences|DT NNS|BODY_11|0
these data types|DT NNS NNS|BODY_3|0
a built-in deduction rule|DT JJ NN NN|BODY_6|1
e 0 / dd insert .insert .s|NN CD NN NN NN NN NNS|BODY_17|0
forall x|JJ SYM|BODY_4|0
difficulties|NNS|BODY_4|0
several mechanisms|JJ NNS|BODY_2|0
operator 2|NN CD|BODY_5|0
many equational theories|JJ JJ NNS|BODY_3|0
all proof obligations|DT NN NNS|BODY_2|0
a variety|DT NN|BODY_3|0
part|NN|BODY_2|0
true and .b c c/ < d|JJ CC JJ NN NN NN NN|BODY_6|1
0 dd y|CD JJ NN|BODY_2|0
lsl claims|JJ NNS|BODY_2|0
two languages|CD NNS|BODY_3|0
certain kinds|JJ NNS|BODY_13|0
more confidence|JJR NN|BODY_11|0
linearcontainer(|NN|BODY_5|0
the single lp command|DT JJ NN NN|BODY_4|0
reduction|NN|BODY_6|0
mechanisms|NNS|BODY_2|0
subtle ways|JJ NNS|BODY_4|0
occurred|VBN|BODY_3|0
associative- commutative operators|NNS JJ NNS|BODY_7|0
19] )|CD -RRB-|BODY_10|0
a universal-existential axiom|DT JJ NN|BODY_5|0
an overview|DT NN|BODY_2|0
many sources|JJ NNS|BODY_2|0
groups|NNS|BODY_6|0
these questions|DT NNS|BODY_4|0
the negation|DT NN|BODY_2|0
y dd y c x|RB JJ RB NN NN|BODY_5|0
a unique id|DT JJ NN|BODY_3|0
its assumptions|PRP$ NNS|BODY_35|0
these proof obligations|DT NN NNS|BODY_11:BODY_1:ABSTRACT_1|0
its assertions|PRP$ NNS|BODY_34|0
any first-order formula #|DT JJR NN #|BODY_8|0
these two files|DT CD NNS|BODY_14|0
new operators|JJ NNS|BODY_7|0
several ways|JJ NNS|BODY_2|0
lp declarations|NN NNS|BODY_11|0
the lp declarations|DT NN NNS|BODY_2|0
follows|VBZ|BODY_18|0
concurrency|NN|BODY_8|0
its proof obligations|PRP$ NN NNS|BODY_28|0
the concluding section|DT VBG NN|BODY_1|0
all interpretations|DT NNS|BODY_5|0
the amount|DT NN|BODY_4|0
explicit lp commands|JJ NN NNS|BODY_3|0
a mechanism (|DT NN -LRB-|BODY_2|0
special mechanisms|JJ NNS|BODY_2|0
two copies|CD NNS|BODY_4|0
amounts|NNS|BODY_8|0
next .new / and rest .new /|JJ JJ NN CC NN JJ NN|BODY_4|0
the computation|DT NN|BODY_5|0
program components|NN NNS|BODY_3|0
clauses )|NNS -RRB-|BODY_15|0
operational content|JJ NN|BODY_7|0
cycles|NNS|BODY_4|0
selective use|JJ NN|BODY_2|0
its operators|PRP$ NNS|BODY_13|0
vectors|NNS|BODY_7|0
a flaw|DT NN|BODY_7|0
the required copy|DT JJ NN|BODY_5|0
any|DT|BODY_8|0
greater flexibility|JJR NN|BODY_7|0
# and lp|# CC NN|BODY_10|0
less suitable semantics|JJR JJ NNS|BODY_6|0
clause associates|NN NNS|BODY_2|0
's forward inference mechanisms|POS JJ NN NNS|BODY_3|0
9 extended example|CD JJ NN|BODY_1|1
this proof obligation|DT NN NN|BODY_2:BODY_3|0
proof management|NN NN|BODY_6|0
the checkability|DT NN|ABSTRACT_1|0
one subgoal|CD NN|BODY_12|0
0 # cd|CD # JJ|BODY_5|0
b c c|NN NN NN|BODY_13|1
figure 2|NN CD|BODY_2|0
the second copy|DT JJ NN|BODY_9|0
specification [12]|NN NN|BODY_17|0
the equations true dd f|DT NNS JJ JJ NN|BODY_2|0
a proposition|DT NN|BODY_5|0
the three named methods|DT CD VBN NNS|BODY_5|0
linearcontainer claims|NN NNS|BODY_2|0
equational term rewriting|JJ NN NN|BODY_8|0
the authors|DT NNS|ABSTRACT_5|0
declarations ) and equations|NNS -RRB- CC NNS|BODY_4|0
any interpretations|DT NNS|BODY_6|0
a consistent theory|DT JJ NN|BODY_5|0
the general case|DT JJ NN|BODY_3|0
condition 1|NN CD|BODY_5|0
the application|DT NN|BODY_9|0
the choice|DT NN|BODY_8|0
particular interface specifications|JJ NN NNS|BODY_5|0
the sort|DT NN|BODY_9|0
]|NNP|BODY_18|0
explicit instantiation|JJ NN|BODY_5|0
these checks|DT NNS|BODY_3|0
q resume|NN NN|BODY_10|1
the semantic claims|DT JJ NNS|BODY_8|0
0 dd y 0|CD VB RB CD|BODY_16|0
the induction scheme|DT NN NN|BODY_31|0
the trait natpriority queue|DT NN NN NN|BODY_2|0
proof scripts|NN NNS|BODY_5|0
the window %|DT NN NN|BODY_11|0
the use|DT NN|BODY_1|0
group theory|NN NN|BODY_2|0
this mechanism|DT NN|BODY_1|0
the theories|DT NNS|BODY_11|0
a definite order|DT JJ NN|BODY_12|0
complete control|JJ NN|BODY_4|0
subsumes|NNS|BODY_2|0
the basis|DT NN|BODY_2|0
consistency (|NN -LRB-|ABSTRACT_3:BODY_3|0
the last line|DT JJ NN|BODY_3|0
its implies clause|PRP$ VBZ NN|BODY_50|0
focus objects|NN NNS|BODY_5|0
# figure 11|# NN CD|BODY_27|0
this sense|DT NN|BODY_4|0
z produces|FW VBZ|BODY_15|1
next , rest , isempty , and 2|IN , NN , JJ , CC CD|BODY_8|0
figure 11|NN CD|BODY_8|0
reductions|NNS|BODY_10|0
an equation e|DT NN NN|BODY_6|0
induction x complete introduces|NN NN VB NN|BODY_5|0
lsl the imports|RB DT NNS|BODY_8|0
the more delicate design issues|DT JJR JJ NN NNS|BODY_5|0
implies|VBZ|BODY_3|0
the lp commands|DT NN NNS|BODY_2|0
given any interpretations|VBN DT NNS|BODY_2|0
y < z dd true yield x|RB NN FW VB JJ NN SYM|BODY_9|1
0 dd e 2 y|CD JJ NN CD NN|BODY_9|0
whose hypotheses|WP$ NNS|BODY_17|1
i d|FW VBD|BODY_9|0
that claims|WDT NNS|BODY_9|0
restricted classes|JJ NNS|BODY_5|0
clause ( equations|NN -LRB- NNS|BODY_6|0
natural interpretations|JJ NNS|BODY_5|0
the implications|DT NNS|BODY_2|0
new constants e|JJ NNS NN|BODY_39|1
 equations|JJ NNS|BODY_2|0
an operator|DT NN|BODY_3|0
a fragment|DT NN|BODY_4|0
various theories|JJ NNS|BODY_8|0
than most interface languages|IN JJS NN NNS|BODY_20|0
0 true|CD JJ|BODY_27|0
e 0 i|NN CD NN|BODY_5|0
a window system|DT NN NN|BODY_4|0
information|NN|BODY_3|0
t 0 1|NN CD CD|BODY_3|0
the basis subgoal|DT NN NN|BODY_2|0
nothing|NN|BODY_3|0
the quantifier forall|DT NN NN|BODY_4|0
a particular form|DT JJ NN|BODY_9|0
a simplified proof|DT JJ NN|BODY_10|0
x # .x [ y/|JJ # , NN NN|BODY_25|0
setinduction2|NN|BODY_28|0
its impact|PRP$ NN|BODY_5|0
c suffices|NN NNS|BODY_6|0
the changed trait|DT VBN NN|BODY_5|0
 rewrite rules|JJ NN NNS|BODY_2|0
finite sets|JJ NNS|BODY_29|0
a first-order theory|DT JJ NN|BODY_4|0
the guidance (|DT NN -LRB-|BODY_7|0
flaws|NNS|BODY_2|0
arbitrary first-order formulas|JJ JJ NNS|BODY_11|0
a fresh|DT JJ|BODY_8|0
's intent|POS NN|BODY_4|0
:.e 2 q|NN CD NN|BODY_5|0
the explicit equations|DT JJ NNS|BODY_3|0
a small amount|DT JJ NN|BODY_14|0
ourselves|PRP|BODY_6:BODY_26|0
that linearcontainer|DT NN|BODY_2|0
's inference mechanisms|POS NN NNS|BODY_3|0
the following proof obligations|DT VBG NN NNS|BODY_7|0
. f orall e/ e|. NN JJ NN NN|BODY_11|0
a subgoal|DT NN|BODY_2|0
its proof method|PRP$ NN NN|BODY_1:BODY_3|0
a new constant q|DT JJ JJ NN|BODY_3|1
techniques|NNS|BODY_2:BODY_4|0
no absolute standard|DT JJ NN|BODY_6|0
their relation|PRP$ NN|BODY_6|0
proof obligations|NN NNS|BODY_4|0
automatic application|JJ NN|BODY_5|0
the benefits|DT NNS|BODY_5|0
whose proof|WP$ NN|BODY_6|0
a rewrite rule|DT NN NN|BODY_7|0
a tool|DT NN|BODY_5|0
additional axioms|JJ NNS|BODY_3|0
a window identifier|DT NN NN|BODY_6|0
some cases|DT NNS|BODY_1|0
these other uses|DT JJ NNS|BODY_1:ABSTRACT_1|0
the case and induction hypotheses|DT NN CC NN NNS|BODY_7|0
lsl traits lslc|JJ NNS NN|BODY_1|0
the basis and induction steps|DT NN CC NN NNS|BODY_4|0
particular subgoals|JJ NNS|BODY_5|0
trait introduces|NN NN|BODY_1|0
several approaches|JJ NNS|BODY_2|0
11]|CD|BODY_8|0
an impossible case|DT JJ NN|BODY_4|0
conjectures|NNS|BODY_6|0
such lemmas|JJ NNS|BODY_5|0
the same roles|DT JJ NNS|BODY_4|0
no|DT|BODY_2|0
the larch project|DT NN NN|BODY_1|0
3|CD|BODY_1|0
immune equations|JJ NNS|BODY_3|0
places|NNS|BODY_28|0
at this point|IN DT NN|BODY_24|0
the subgoal isgenerated .x/|DT NN VBN VBN|BODY_18|0
heuristic searches|JJ NNS|BODY_3|0
purely equational axiomatizations|RB JJ NNS|BODY_3|0
the lemma e|DT NN NN|BODY_7|0
each trait|DT NN|BODY_6|0
two traits|CD NNS|BODY_3|0
heuristics|NNS|BODY_3|0
proof mechanisms|NN NNS|BODY_2|0
erroneous claims|JJ NNS|BODY_2|0
about|RB|BODY_5|0
a powerful debugging technique|DT JJ NN NN|BODY_6|0
the flaws|DT NNS|BODY_8|0
the five immediate consequences|DT CD JJ NNS|BODY_4|0
assert|VBP|BODY_19|0
's syntax|POS NN|BODY_2|0
built-in rewrite rules|JJ NN NNS|BODY_2|0
itself|PRP|BODY_5:ABSTRACT_5|0
a counterexample|DT NN|BODY_4|0
no assistance|DT NN|BODY_2|0
one trait )|CD NN -RRB-|BODY_6|0
region and displayable|NN CC NN|BODY_3|0
a built-in notion|DT JJ NN|BODY_3|0
the equation true dd f|DT NN JJ JJ NN|BODY_6|0
that t|IN NN|BODY_44|0
the same time|DT JJ NN|BODY_10|0
a proof checker|DT NN NN|BODY_3|0
backwards inference techniques|RB VBN NNS|BODY_2|0
the required proof|DT VBN NN|BODY_2|0
useful information|JJ NN|BODY_3|0
the immediate consequences|DT JJ NNS|BODY_37|0
the conditional operator|DT JJ NN|BODY_7|0
these systems|DT NNS|BODY_1|0
a lemma|DT NN|BODY_3|0
t consists|NN VBZ|BODY_47|0
certain aspects|JJ NNS|BODY_2|0
james saxe and j-rgen staunstrup|NNS JJ CC JJ NN|BODY_1|0
how|WRB|BODY_6|0
our early experience|PRP$ JJ NN|BODY_2|0
some errors|DT NNS|BODY_2|0
the logic|DT NN|BODY_2|0
a lack|DT NN|BODY_5|0
note|NN|BODY_1|0
all traits ( transitively|DT NNS -LRB- NN|BODY_30|0
requirements|NNS|BODY_2|0
the redundant information|DT JJ NN|BODY_1|0
construct|VB|BODY_5|0
constructs|NNS|BODY_2|0
the  correctness |DT NN NN|BODY_3|0
consequences )|NNS -RRB-|ABSTRACT_8:BODY_8|0
the added exemption|DT JJ NN|BODY_1|0
checking consistency checks|VBG NN NNS|BODY_1|0
's implies clause|POS VBZ NN|BODY_41|0
's explicit theory|POS JJ NN|BODY_3|0
's immediate consequences|POS JJ NNS|BODY_10|0
further guidance|JJ NN|BODY_2|0
any programming language|DT VBG NN|BODY_7|0
figure 4)|NN NNS|BODY_7|0
first writing|JJ NN|BODY_4|0
first-order logic )|JJ NN -RRB-|BODY_11|0
time and space|NN CC NN|BODY_6|0
examples|NNS|BODY_1|0
a standard approach|DT JJ NN|BODY_1|0
natpri- ority queue|NNS NN NN|BODY_5|0
above|RB|BODY_10|1
locations|NNS|BODY_6|0
command obtains|NN NNS|BODY_2|0
specification time|NN NN|BODY_4|0
natpriorityqueue check assumption|JJ NN NN|BODY_1|0
debugging larch|VBG NN|TITLE_1|0
to|TO|BODY_12|0
1 users|CD NNS|BODY_1|0
our experience|PRP$ NN|BODY_1|0
assert e dd|VB NN NN|BODY_1|0
equations )|NNS -RRB-|BODY_16|0
the natural numbers|DT JJ NNS|BODY_14|0
inconsistent|NN|BODY_7|0
the programming language|DT NN NN|BODY_5|0
2 c.|CD NN|BODY_13|0
these facilities|DT NNS|BODY_1|0
[5]|NN|BODY_4|0
the trait view|DT NN NN|BODY_5|0
concurrent algorithms )|JJ NNS -RRB-|ABSTRACT_9|0
sections|NNS|BODY_1|0
the commutative theory|DT JJ NN|BODY_4|0
a contradiction|DT NN|BODY_5|0
the soundness|DT NN|BODY_1|0
linearcontainer and totalorder|NN CC NN|BODY_4|0
certifying consistency|JJ NN|BODY_3|0
course|NN|BODY_1|0
lp cannot|VB NN|BODY_1|0
its search|PRP$ VB|BODY_11|0
the additional hypotheses|DT JJ NNS|BODY_36|0
the following sections|DT VBG NNS|BODY_1|0
the principal debugging tool|DT JJ NN NN|ABSTRACT_3|0
embedded quantifiers|JJ NNS|BODY_7|0
a front-end to|DT JJ TO|BODY_5:ABSTRACT_5|0
andres modet|NNS NN|BODY_1|0
the second|DT JJ|BODY_5|0
e 2 .x [ x/|NN CD NN FW NN|BODY_8|0
the exempting clause|DT JJ NN|BODY_1|0
the initial and final algebra interpretations|DT JJ CC JJ NN NNS|BODY_1|0
their claims|PRP$ NNS|BODY_6:ABSTRACT_6|0
furthermore cd # cd 0|JJR JJ # JJ CD|BODY_1|0
more subtle checking|RBR JJ NN|BODY_3|0
specific lsl constructs|JJ JJ NNS|BODY_3|0
the former|DT JJ|BODY_1|0
more promising approaches|RBR JJ NNS|BODY_1|0
two reasons|CD NNS|BODY_5|0
the first try|DT JJ NN|BODY_17|0
the normalized conjecture|DT JJ NN|BODY_1|0
exponential time and space|JJ NN CC NN|BODY_5|0
infinitely many times|RB JJ NNS|BODY_6|0
sections 3 and 4|NNS CD CC CD|BODY_1|0
the inconsistent equation true dd f|DT JJ NN JJ NN NN|BODY_4|0
the interface parts|DT NN NNS|BODY_6|0
the same location|DT JJ NN|BODY_18|0
some other provers|DT JJ NNS|BODY_5|0
the main drawback|DT JJ NN|BODY_1|0
unintended side-effects|JJ NNS|BODY_9|0
emptyv [cd]|JJ NN|BODY_5|0
2 and isempty|CD CC RB|BODY_5|0
the language|DT NN|BODY_8|0
a sort|DT NN|BODY_33|0
its associated theory|PRP$ JJ NN|BODY_10|0
rewrites conjectures|VBZ NNS|BODY_8|0
striking contrast|JJ NN|BODY_1|0
the view trait (|DT NN NN -LRB-|BODY_1|0
natpriority queue|NN NN|BODY_10|0
our principal debugging tool|PRP$ JJ NN NN|BODY_3|0
the one|DT NN|BODY_15|0
the interface level|DT NN NN|BODY_4|0
the original conjecture|DT JJ NN|BODY_4|0
its explicit theory|PRP$ JJ NN|BODY_9|0
) c|-RRB- NN|BODY_1|0
these simpler ordering methods|DT JJR VBG NNS|BODY_1|0
the command critical-pairs|DT NN NNS|BODY_1|0
communication mechanisms|NN NNS|BODY_1|0
lsl)|FW|BODY_6|0
conclusions|NNS|BODY_1|0
groups )|NNS -RRB-|BODY_13|0
the inductive base case|DT JJ NN NN|BODY_1|0
the prove command|DT VBP NN|BODY_2|0
a generated|DT VBN|BODY_1|0
3 semantic checks|CD JJ NNS|BODY_1|0
two primary uses|CD JJ NNS|BODY_2|0
introduction proponents|NN NNS|BODY_1|0
program modules|NN NNS|BODY_8|0
the susceptibility|DT NN|BODY_3|0
this guidance|DT NN|BODY_1|0
the sample proof|DT NN NN|BODY_1|0
's discretion|POS NN|BODY_5|0
's intentions|POS NNS|BODY_5|0
the first if|DT JJ IN|BODY_9|0
a contradiction )|DT NN -RRB-|BODY_7|0
that priorityqueue|RB JJ|BODY_1|0
erroneous programs|JJ NNS|BODY_12|0
what order|WP NN|BODY_6|0
its assumes clause|PRP$ VBZ NN|BODY_1|0
the larch style|DT NN NN|BODY_1|0
inference|NN|BODY_4|0
the last qed command|DT JJ JJ NN|BODY_7|0
debugging lsl specifications|NN JJ NNS|BODY_3|0
a primary goal|DT JJ NN|BODY_1|0
several semantic checks|JJ JJ NNS|BODY_7|0
trait inclusion and trait assumption|NN NN CC NN NN|BODY_1|0
about critical pairs|IN JJ NNS|BODY_10|0
types|NNS|BODY_1|0
variables c|NNS NN|BODY_6|0
equational and non-equational traits|JJ CC JJ NNS|BODY_4|0
lslc checks|VBN NNS|BODY_1:ABSTRACT_1|0
a universal  interface language|DT JJ JJ NN NN|BODY_4|0
totalorder( nat )|JJ NN -RRB-|BODY_12|0
further interaction|JJ NN|BODY_5|0
4|CD|BODY_6|0
addw.v 3|NN CD|BODY_6|0
before|RB|BODY_1|0
inferences|NNS|BODY_1|0
the inclusion|DT NN|BODY_1|0
a simple windowing system [8]|DT JJ NN NN NN|BODY_9|1
each larch interface language|DT NN NN NN|BODY_1|0
2.|VBG|BODY_16|0
4 proof obligations|CD NN NNS|BODY_1|0
two mechanisms|CD NNS|BODY_2|0
the second case|DT JJ NN|BODY_1|0
these actions|DT NNS|BODY_1|0
emptyv [cd ]|JJ JJ SYM|BODY_4|0
once|RB|BODY_11|0
these rewrite rules|DT JJ NNS|BODY_1|0
consequence|NN|BODY_5|0
the claims|DT NNS|BODY_1|0
a program|DT NN|BODY_8|0
a front-end such as lslc )|DT JJ JJ IN NN -RRB-|BODY_5|0
its conclusions|PRP$ NNS|BODY_6|1
our informal reasoning|PRP$ JJ NN|BODY_1|0
more detail|JJR NN|BODY_4|0
another trait|DT NN|BODY_7|0
the trait hierarchy )|DT NN NN -RRB-|BODY_14|0
a particular programming language|DT JJ NN NN|BODY_5|0
lsl or lp.|NN CC NN|BODY_27|0
true|JJ|BODY_12|0
interaction|NN|BODY_4|0
 conservative extension |JJ JJ NN|BODY_5|0
2 exempting next .new/|CD JJ JJ NN|BODY_22|0
cartesianview|NN|BODY_1|0
a < d|DT NN NN|BODY_20|1
a reader|DT NN|BODY_9|0
2. trait view|DT NN NN|BODY_1|0
the next trait|DT JJ NN|BODY_1|0
a theorem prover|DT NN NN|BODY_5|0
the hierarchy|DT NN|BODY_5|0
a  converts|DT JJ NNS|BODY_1|0
these operators|DT NNS|BODY_4|0
no problems|DT NNS|BODY_3|0
the check|DT NN|BODY_1|0
the next section discusses|DT JJ NN NNS|BODY_1|0
the other proof obligation|DT JJ NN NN|BODY_1|0
this proof strategy|DT NN NN|BODY_1|0
more subtle problems|RBR JJ NNS|BODY_7|0
totally erroneous changes|RB JJ NNS|BODY_5|0
declarations sorts|NNS NNS|BODY_1|0
a prominent role|DT JJ NN|BODY_8|0
other equations and rewrite rules|JJ NNS CC NN NNS|BODY_11|0
terminating rewriting systems|NN VBG NNS|BODY_5|0
these conditions|DT NNS|BODY_1|0
a large set|DT JJ NN|BODY_1|0
a small set|DT JJ NN|BODY_1|0
attempted proofs|VBN NNS|BODY_4|0
regression testing|NN NN|BODY_4|0
theories or models [3 , 17]|NNS CC NNS CD , CD|BODY_5|0
both mechanisms|DT NNS|BODY_1|0
7 checking theory|CD NN NN|BODY_1|0
these traits|DT NNS|BODY_16|0
an equation or rewrite rule|DT NN CC NN NN|BODY_1|0
cases and contradiction|NNS CC NN|BODY_4|0
minute detail|JJ NN|BODY_6|0
's logical system|POS JJ NN|BODY_4|0
this expression|DT NN|BODY_1|0
complicated search tactics|VBN NN NNS|BODY_4|0
c.|NN|BODY_26|0
strategic decisions|JJ NNS|BODY_1|0
this proof|DT NN|BODY_1|0
the initial or final algebra interpretations|DT JJ CC JJ NN NNS|BODY_9|0
other times|JJ NNS|BODY_1|0
the sets|DT NNS|BODY_1|0
other situations|JJ NNS|BODY_2|0
the next two sections|DT JJ CD NNS|BODY_1|0
the larch approach|DT NN NN|BODY_1|0
an arbitrary specification|DT JJ NN|BODY_7|0
any practical methodology|DT JJ NN|BODY_1|0
equational traits|JJ NNS|BODY_1|0
mechanical assistance|JJ NN|BODY_11|0
# converts insert|# NNS NN|BODY_25|0
any promising means|DT JJ NNS|BODY_1|0
( this suffices|-LRB- DT NNS|BODY_1|0
this hypothesis|DT NN|BODY_46|1
this not|DT RB|BODY_1|0
peano arithmetic|NN NN|BODY_9|0
's term syntax|POS NN NN|BODY_10|0
recently|RB|BODY_1|0
the checkable redundancy|DT JJ NN|BODY_1|0
the initial design|DT JJ NN|BODY_1|0
normal forms|JJ NNS|BODY_7|0
's implications|POS NNS|BODY_4|0
the coordinate operators|DT VBP NNS|BODY_4|0
this axiom|DT NN|BODY_1|0
user guidance|NN NN|BODY_1|0
fg , insert set name setinduction2|JJ , JJ VBN NN NN|BODY_16|0
operators set name setinduction1|NNS VBN NN NN|BODY_14|0
t and t implies|NN CC NN VBZ|BODY_8|0
many heuristics|JJ NNS|BODY_3|0
many points|JJ NNS|BODY_1|0
the proposition|DT NN|BODY_7|0
an identity )|DT NN -RRB-|BODY_10|0
any critical pairs|DT JJ NNS|BODY_5|0
conventional term rewriting|JJ NN VBG|BODY_4|0
difficult proofs|JJ NNS|BODY_2|0
lcf [15]|NN NN|BODY_1|0
particular data types|JJ NNS NNS|BODY_5|0
some methods|DT NNS|BODY_1|0
terms modulo associativity and commutativity|NNS , NN CC NN|BODY_3|0
the boyer-moore prover [1]|DT NN NN NN|BODY_1|0
a coordinate system|DT VBP NN|BODY_3|0
an artificially simplified example|DT RB JJ NN|BODY_4|0
bugs|NNS|BODY_3|0
cd # cd 0|JJ # JJ CD|BODY_3|0
difficulty|NN|BODY_8|0
figure 13|NN CD|BODY_1|0
larger specifications|JJR NNS|BODY_1|0
some specifications|DT NNS|BODY_1|0
the example|DT NN|BODY_5|0
the mechanical proofs|DT JJ NNS|BODY_9|0
the next several sections|DT JJ JJ NNS|BODY_1|0
the previous section|DT JJ NN|BODY_1|0
both priorityqueue and naturalnumber|DT NN CC NN|BODY_7|0
correctness|NN|BODY_8|0
manual ordering methods|NN VBG NNS|BODY_1|0
such claims|JJ NNS|BODY_10|0
all traits ( transitively )|DT NNS -LRB- NN -RRB-|BODY_25|0
the preceding proof obligation|DT VBG NN NN|BODY_1|0
6 proof mechanisms|CD NN NNS|BODY_1|0
a debugging tool|DT NN NN|BODY_3|0
a proof debugger|DT NN NN|BODY_3|0
each method|DT NN|BODY_1|0
figure 6|NN CD|BODY_1|0
lsl.|VBG|BODY_5:BODY_23|0
many proof attempts|JJ NN NNS|BODY_1|0
many respects|JJ NNS|BODY_1|0
other formulas|JJ NNS|BODY_1|0
t subgoals|RB NNS|BODY_3|0
the induction subgoal|DT NN NN|BODY_1|1
the others|DT NNS|BODY_5|0
the second conjecture|DT JJ NN|BODY_1|0
these obligations|DT NNS|BODY_9|0
this fact|DT NN|BODY_1|1
the logical system|DT JJ NN|BODY_5|0
lslc extracts proof obligations|JJ NNS NN NNS|BODY_1|0
unsuccessful searches|JJ NNS|BODY_1|0
verification|NN|BODY_1|0
c t or t ) c s.|NN NN CC NN -RRB- NN NN|BODY_1|0
linearcontainer totalorder check implications|NN NN NN NNS|BODY_1|0
local assertions|JJ NNS|BODY_1|0
parsing and type-checking|NN CC NN|BODY_1|0
priorityqueue naturalnumber check implications|NN NN NN NNS|BODY_1|0
the formalization|DT NN|BODY_1|0
the proof strategy|DT NN NN|BODY_1|0
